State 63 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 124 conflicts: 4 shift/reduce
State 125 conflicts: 4 shift/reduce
State 126 conflicts: 4 shift/reduce
State 127 conflicts: 4 shift/reduce
State 129 conflicts: 1 shift/reduce
State 130 conflicts: 1 shift/reduce
State 171 conflicts: 2 shift/reduce
State 172 conflicts: 2 shift/reduce
State 185 conflicts: 1 shift/reduce
State 195 conflicts: 1 shift/reduce
State 225 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: libraries procedure_main_is function_list

    2 libraries: library libraries
    3          | %empty

    4 library: INCLUDE LEFT_ANGLE_BRACKET name DOT name RIGHT_ANGLE_BRACKET

    5 procedure_main_is: linefeed
    6                  | %empty

    7 function_list: function function_list
    8              | %empty

    9 function: type name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET
   10         | VOID_TYPE name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

   11 argument_list: argument COMMA argument_list
   12              | argument

   13 argument: type name
   14         | %empty

   15 expression: LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET
   16           | expression PLUS expression
   17           | expression MINUS expression
   18           | expression MULTIPLY expression
   19           | expression DIVIDE expression
   20           | NUMBER
   21           | name
   22           | TRUE_STR
   23           | FALSE_STR

   24 name: NAME

   25 number: NUMBER

   26 type: INT_TYPE
   27     | DOUBLE_TYPE
   28     | FLOAT_TYPE
   29     | CHAR_TYPE
   30     | STRING_TYPE
   31     | BOOL_TYPE

   32 statements: statement statements
   33           | %empty

   34 statement: variable
   35          | name PLUS PLUS SEMICOLON
   36          | name MINUS MINUS SEMICOLON
   37          | name EQUALS expression SEMICOLON
   38          | name PLUS EQUALS expression SEMICOLON
   39          | name MINUS EQUALS expression SEMICOLON
   40          | name MULTIPLY EQUALS expression SEMICOLON
   41          | name DIVIDE EQUALS expression SEMICOLON
   42          | PRINTF LEFT_ROUND_BRACKET QUOTE name QUOTE RIGHT_ROUND_BRACKET SEMICOLON
   43          | PRINTF LEFT_ROUND_BRACKET QUOTE number QUOTE RIGHT_ROUND_BRACKET SEMICOLON
   44          | while
   45          | if
   46          | do_while
   47          | for
   48          | switch
   49          | return_statement

   50 return_statement: RETURN name SEMICOLON
   51                 | RETURN NUMBER SEMICOLON
   52                 | RETURN expression SEMICOLON
   53                 | RETURN SEMICOLON

   54 variable: type name SEMICOLON
   55         | type name EQUALS expression SEMICOLON

   56 statement_with_or_without_brackets: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET
   57                                   | statement

   58 while: WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets

   59 conditions: LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET
   60           | conditions AND conditions
   61           | conditions OR conditions
   62           | condition

   63 condition: expression
   64          | name condition_operand expression
   65          | LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand expression
   66          | LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET
   67          | name condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET
   68          | QUOTE name QUOTE

   69 condition_operand: GREATER_EQUAL
   70                  | LESS_EQUAL
   71                  | EQUAL_EQUAL
   72                  | NOT_EQUAL
   73                  | LEFT_ANGLE_BRACKET
   74                  | RIGHT_ANGLE_BRACKET

   75 if: IF LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets else

   76 else: ELSE statement_with_or_without_brackets
   77     | %empty

   78 do_while: DO statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET SEMICOLON

   79 for: FOR LEFT_ROUND_BRACKET for_expression RIGHT_ROUND_BRACKET statement_with_or_without_brackets

   80 for_expression: SEMICOLON conditions SEMICOLON
   81               | for_statement SEMICOLON conditions SEMICOLON
   82               | SEMICOLON conditions SEMICOLON for_step
   83               | for_statement SEMICOLON conditions SEMICOLON for_step

   84 for_statement: NAME
   85              | type NAME EQUALS expression
   86              | for_step

   87 for_step: NAME PLUS PLUS
   88         | NAME MINUS MINUS
   89         | NAME EQUALS expression
   90         | NAME PLUS EQUALS expression
   91         | NAME MINUS EQUALS expression
   92         | NAME MULTIPLY EQUALS expression
   93         | NAME DIVIDE EQUALS expression

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET

   96 cases: case cases
   97      | case

   98 case: CASE value COLON statements break

   99 value: QUOTE NAME QUOTE
  100      | NUMBER

  101 break: BREAK SEMICOLON
  102      | %empty

  103 default: DEFAULT COLON statements break


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 35 36 37 38 39 40 41 42 43 50 51 52 53 54 55 78 80
    81 82 83 101
DOT (259) 4
COMMA (260) 11
QUOTE (261) 42 43 68 99
COLON (262) 98 103
LEFT_ROUND_BRACKET (263) 9 10 15 42 43 58 59 65 66 67 75 78 79 94 95
RIGHT_ROUND_BRACKET (264) 9 10 15 42 43 58 59 65 66 67 75 78 79 94
    95
RIGHT_ANGLE_BRACKET (265) 4 74
LEFT_ANGLE_BRACKET (266) 4 73
LEFT_CURLY_BRACKET (267) 9 10 56 94 95
RIGHT_CURLY_BRACKET (268) 9 10 56 94 95
NAME (269) 24 84 85 87 88 89 90 91 92 93 94 95 99
INCLUDE (270) 4
INT_TYPE (271) 26
DOUBLE_TYPE (272) 27
FLOAT_TYPE (273) 28
CHAR_TYPE (274) 29
STRING_TYPE (275) 30
BOOL_TYPE (276) 31
VOID_TYPE (277) 10
PRINTF (278) 42 43
RETURN (279) 50 51 52 53
WHILE (280) 58 78
DO (281) 78
FOR (282) 79
IF (283) 75
ELSE (284) 76
SWITCH (285) 94 95
CASE (286) 98
BREAK (287) 101
DEFAULT (288) 103
GREATER_EQUAL (289) 69
LESS_EQUAL (290) 70
EQUAL_EQUAL (291) 71
NOT_EQUAL (292) 72
EQUALS (293) 37 38 39 40 41 55 85 89 90 91 92 93
AND (294) 60
OR (295) 61
PLUS (296) 16 35 38 87 90
MINUS (297) 17 36 39 88 91
MULTIPLY (298) 18 40 92
DIVIDE (299) 19 41 93
NUMBER (300) 20 25 51 100
TRUE_STR (301) 22
FALSE_STR (302) 23
linefeed (303) 5


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
input (50)
    on left: 1, on right: 0
libraries (51)
    on left: 2 3, on right: 1 2
library (52)
    on left: 4, on right: 2
procedure_main_is (53)
    on left: 5 6, on right: 1
function_list (54)
    on left: 7 8, on right: 1 7
function (55)
    on left: 9 10, on right: 7
argument_list (56)
    on left: 11 12, on right: 9 10 11
argument (57)
    on left: 13 14, on right: 11 12
expression (58)
    on left: 15 16 17 18 19 20 21 22 23, on right: 15 16 17 18 19 37
    38 39 40 41 52 55 63 64 65 85 89 90 91 92 93
name (59)
    on left: 24, on right: 4 9 10 13 21 35 36 37 38 39 40 41 42 50
    54 55 64 65 66 67 68
number (60)
    on left: 25, on right: 43
type (61)
    on left: 26 27 28 29 30 31, on right: 9 13 54 55 85
statements (62)
    on left: 32 33, on right: 9 10 32 56 98 103
statement (63)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49, on right:
    32 57
return_statement (64)
    on left: 50 51 52 53, on right: 49
variable (65)
    on left: 54 55, on right: 34
statement_with_or_without_brackets (66)
    on left: 56 57, on right: 58 75 76 78 79
while (67)
    on left: 58, on right: 44
conditions (68)
    on left: 59 60 61 62, on right: 58 59 60 61 75 78 80 81 82 83
condition (69)
    on left: 63 64 65 66 67 68, on right: 62
condition_operand (70)
    on left: 69 70 71 72 73 74, on right: 64 65 66 67
if (71)
    on left: 75, on right: 45
else (72)
    on left: 76 77, on right: 75
do_while (73)
    on left: 78, on right: 46
for (74)
    on left: 79, on right: 47
for_expression (75)
    on left: 80 81 82 83, on right: 79
for_statement (76)
    on left: 84 85 86, on right: 81 83
for_step (77)
    on left: 87 88 89 90 91 92 93, on right: 82 83 86
switch (78)
    on left: 94 95, on right: 48
cases (79)
    on left: 96 97, on right: 94 95 96
case (80)
    on left: 98, on right: 96 97
value (81)
    on left: 99 100, on right: 98
break (82)
    on left: 101 102, on right: 98 103
default (83)
    on left: 103, on right: 95


State 0

    0 $accept: . input $end

    INCLUDE  shift, and go to state 1

    $default  reduce using rule 3 (libraries)

    input      go to state 2
    libraries  go to state 3
    library    go to state 4


State 1

    4 library: INCLUDE . LEFT_ANGLE_BRACKET name DOT name RIGHT_ANGLE_BRACKET

    LEFT_ANGLE_BRACKET  shift, and go to state 5


State 2

    0 $accept: input . $end

    $end  shift, and go to state 6


State 3

    1 input: libraries . procedure_main_is function_list

    linefeed  shift, and go to state 7

    $default  reduce using rule 6 (procedure_main_is)

    procedure_main_is  go to state 8


State 4

    2 libraries: library . libraries

    INCLUDE  shift, and go to state 1

    $default  reduce using rule 3 (libraries)

    libraries  go to state 9
    library    go to state 4


State 5

    4 library: INCLUDE LEFT_ANGLE_BRACKET . name DOT name RIGHT_ANGLE_BRACKET

    NAME  shift, and go to state 10

    name  go to state 11


State 6

    0 $accept: input $end .

    $default  accept


State 7

    5 procedure_main_is: linefeed .

    $default  reduce using rule 5 (procedure_main_is)


State 8

    1 input: libraries procedure_main_is . function_list

    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    VOID_TYPE    shift, and go to state 18

    $default  reduce using rule 8 (function_list)

    function_list  go to state 19
    function       go to state 20
    type           go to state 21


State 9

    2 libraries: library libraries .

    $default  reduce using rule 2 (libraries)


State 10

   24 name: NAME .

    $default  reduce using rule 24 (name)


State 11

    4 library: INCLUDE LEFT_ANGLE_BRACKET name . DOT name RIGHT_ANGLE_BRACKET

    DOT  shift, and go to state 22


State 12

   26 type: INT_TYPE .

    $default  reduce using rule 26 (type)


State 13

   27 type: DOUBLE_TYPE .

    $default  reduce using rule 27 (type)


State 14

   28 type: FLOAT_TYPE .

    $default  reduce using rule 28 (type)


State 15

   29 type: CHAR_TYPE .

    $default  reduce using rule 29 (type)


State 16

   30 type: STRING_TYPE .

    $default  reduce using rule 30 (type)


State 17

   31 type: BOOL_TYPE .

    $default  reduce using rule 31 (type)


State 18

   10 function: VOID_TYPE . name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    NAME  shift, and go to state 10

    name  go to state 23


State 19

    1 input: libraries procedure_main_is function_list .

    $default  reduce using rule 1 (input)


State 20

    7 function_list: function . function_list

    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    VOID_TYPE    shift, and go to state 18

    $default  reduce using rule 8 (function_list)

    function_list  go to state 24
    function       go to state 20
    type           go to state 21


State 21

    9 function: type . name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    NAME  shift, and go to state 10

    name  go to state 25


State 22

    4 library: INCLUDE LEFT_ANGLE_BRACKET name DOT . name RIGHT_ANGLE_BRACKET

    NAME  shift, and go to state 10

    name  go to state 26


State 23

   10 function: VOID_TYPE name . LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 27


State 24

    7 function_list: function function_list .

    $default  reduce using rule 7 (function_list)


State 25

    9 function: type name . LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 28


State 26

    4 library: INCLUDE LEFT_ANGLE_BRACKET name DOT name . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 29


State 27

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET . argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17

    $default  reduce using rule 14 (argument)

    argument_list  go to state 30
    argument       go to state 31
    type           go to state 32


State 28

    9 function: type name LEFT_ROUND_BRACKET . argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17

    $default  reduce using rule 14 (argument)

    argument_list  go to state 33
    argument       go to state 31
    type           go to state 32


State 29

    4 library: INCLUDE LEFT_ANGLE_BRACKET name DOT name RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 4 (library)


State 30

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET argument_list . RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 34


State 31

   11 argument_list: argument . COMMA argument_list
   12              | argument .

    COMMA  shift, and go to state 35

    $default  reduce using rule 12 (argument_list)


State 32

   13 argument: type . name

    NAME  shift, and go to state 10

    name  go to state 36


State 33

    9 function: type name LEFT_ROUND_BRACKET argument_list . RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 37


State 34

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET . LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 38


State 35

   11 argument_list: argument COMMA . argument_list

    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17

    $default  reduce using rule 14 (argument)

    argument_list  go to state 39
    argument       go to state 31
    type           go to state 32


State 36

   13 argument: type name .

    $default  reduce using rule 13 (argument)


State 37

    9 function: type name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET . LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 40


State 38

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET . statements RIGHT_CURLY_BRACKET

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 50
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 39

   11 argument_list: argument COMMA argument_list .

    $default  reduce using rule 11 (argument_list)


State 40

    9 function: type name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET . statements RIGHT_CURLY_BRACKET

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 59
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 41

   42 statement: PRINTF . LEFT_ROUND_BRACKET QUOTE name QUOTE RIGHT_ROUND_BRACKET SEMICOLON
   43          | PRINTF . LEFT_ROUND_BRACKET QUOTE number QUOTE RIGHT_ROUND_BRACKET SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 60


State 42

   50 return_statement: RETURN . name SEMICOLON
   51                 | RETURN . NUMBER SEMICOLON
   52                 | RETURN . expression SEMICOLON
   53                 | RETURN . SEMICOLON

    SEMICOLON           shift, and go to state 61
    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 63
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 66
    name        go to state 67


State 43

   58 while: WHILE . LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets

    LEFT_ROUND_BRACKET  shift, and go to state 68


State 44

   78 do_while: DO . statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET SEMICOLON

    LEFT_CURLY_BRACKET  shift, and go to state 69
    NAME                shift, and go to state 10
    INT_TYPE            shift, and go to state 12
    DOUBLE_TYPE         shift, and go to state 13
    FLOAT_TYPE          shift, and go to state 14
    CHAR_TYPE           shift, and go to state 15
    STRING_TYPE         shift, and go to state 16
    BOOL_TYPE           shift, and go to state 17
    PRINTF              shift, and go to state 41
    RETURN              shift, and go to state 42
    WHILE               shift, and go to state 43
    DO                  shift, and go to state 44
    FOR                 shift, and go to state 45
    IF                  shift, and go to state 46
    SWITCH              shift, and go to state 47

    name                                go to state 48
    type                                go to state 49
    statement                           go to state 70
    return_statement                    go to state 52
    variable                            go to state 53
    statement_with_or_without_brackets  go to state 71
    while                               go to state 54
    if                                  go to state 55
    do_while                            go to state 56
    for                                 go to state 57
    switch                              go to state 58


State 45

   79 for: FOR . LEFT_ROUND_BRACKET for_expression RIGHT_ROUND_BRACKET statement_with_or_without_brackets

    LEFT_ROUND_BRACKET  shift, and go to state 72


State 46

   75 if: IF . LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets else

    LEFT_ROUND_BRACKET  shift, and go to state 73


State 47

   94 switch: SWITCH . LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET
   95       | SWITCH . LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 74


State 48

   35 statement: name . PLUS PLUS SEMICOLON
   36          | name . MINUS MINUS SEMICOLON
   37          | name . EQUALS expression SEMICOLON
   38          | name . PLUS EQUALS expression SEMICOLON
   39          | name . MINUS EQUALS expression SEMICOLON
   40          | name . MULTIPLY EQUALS expression SEMICOLON
   41          | name . DIVIDE EQUALS expression SEMICOLON

    EQUALS    shift, and go to state 75
    PLUS      shift, and go to state 76
    MINUS     shift, and go to state 77
    MULTIPLY  shift, and go to state 78
    DIVIDE    shift, and go to state 79


State 49

   54 variable: type . name SEMICOLON
   55         | type . name EQUALS expression SEMICOLON

    NAME  shift, and go to state 10

    name  go to state 80


State 50

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 81


State 51

   32 statements: statement . statements

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 82
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 52

   49 statement: return_statement .

    $default  reduce using rule 49 (statement)


State 53

   34 statement: variable .

    $default  reduce using rule 34 (statement)


State 54

   44 statement: while .

    $default  reduce using rule 44 (statement)


State 55

   45 statement: if .

    $default  reduce using rule 45 (statement)


State 56

   46 statement: do_while .

    $default  reduce using rule 46 (statement)


State 57

   47 statement: for .

    $default  reduce using rule 47 (statement)


State 58

   48 statement: switch .

    $default  reduce using rule 48 (statement)


State 59

    9 function: type name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 83


State 60

   42 statement: PRINTF LEFT_ROUND_BRACKET . QUOTE name QUOTE RIGHT_ROUND_BRACKET SEMICOLON
   43          | PRINTF LEFT_ROUND_BRACKET . QUOTE number QUOTE RIGHT_ROUND_BRACKET SEMICOLON

    QUOTE  shift, and go to state 84


State 61

   53 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 53 (return_statement)


State 62

   15 expression: LEFT_ROUND_BRACKET . expression RIGHT_ROUND_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 86
    name        go to state 87


State 63

   20 expression: NUMBER .
   51 return_statement: RETURN NUMBER . SEMICOLON

    SEMICOLON  shift, and go to state 88

    SEMICOLON  [reduce using rule 20 (expression)]
    $default   reduce using rule 20 (expression)


State 64

   22 expression: TRUE_STR .

    $default  reduce using rule 22 (expression)


State 65

   23 expression: FALSE_STR .

    $default  reduce using rule 23 (expression)


State 66

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   52 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 89
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 67

   21 expression: name .
   50 return_statement: RETURN name . SEMICOLON

    SEMICOLON  shift, and go to state 94

    SEMICOLON  [reduce using rule 21 (expression)]
    $default   reduce using rule 21 (expression)


State 68

   58 while: WHILE LEFT_ROUND_BRACKET . conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 99
    condition   go to state 100


State 69

   56 statement_with_or_without_brackets: LEFT_CURLY_BRACKET . statements RIGHT_CURLY_BRACKET

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 101
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 70

   57 statement_with_or_without_brackets: statement .

    $default  reduce using rule 57 (statement_with_or_without_brackets)


State 71

   78 do_while: DO statement_with_or_without_brackets . WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET SEMICOLON

    WHILE  shift, and go to state 102


State 72

   79 for: FOR LEFT_ROUND_BRACKET . for_expression RIGHT_ROUND_BRACKET statement_with_or_without_brackets

    SEMICOLON    shift, and go to state 103
    NAME         shift, and go to state 104
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17

    type            go to state 105
    for_expression  go to state 106
    for_statement   go to state 107
    for_step        go to state 108


State 73

   75 if: IF LEFT_ROUND_BRACKET . conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets else

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 109
    condition   go to state 100


State 74

   94 switch: SWITCH LEFT_ROUND_BRACKET . NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET . NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET

    NAME  shift, and go to state 110


State 75

   37 statement: name EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 111
    name        go to state 87


State 76

   35 statement: name PLUS . PLUS SEMICOLON
   38          | name PLUS . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 112
    PLUS    shift, and go to state 113


State 77

   36 statement: name MINUS . MINUS SEMICOLON
   39          | name MINUS . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 114
    MINUS   shift, and go to state 115


State 78

   40 statement: name MULTIPLY . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 116


State 79

   41 statement: name DIVIDE . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 117


State 80

   54 variable: type name . SEMICOLON
   55         | type name . EQUALS expression SEMICOLON

    SEMICOLON  shift, and go to state 118
    EQUALS     shift, and go to state 119


State 81

   10 function: VOID_TYPE name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET .

    $default  reduce using rule 10 (function)


State 82

   32 statements: statement statements .

    $default  reduce using rule 32 (statements)


State 83

    9 function: type name LEFT_ROUND_BRACKET argument_list RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET .

    $default  reduce using rule 9 (function)


State 84

   42 statement: PRINTF LEFT_ROUND_BRACKET QUOTE . name QUOTE RIGHT_ROUND_BRACKET SEMICOLON
   43          | PRINTF LEFT_ROUND_BRACKET QUOTE . number QUOTE RIGHT_ROUND_BRACKET SEMICOLON

    NAME    shift, and go to state 10
    NUMBER  shift, and go to state 120

    name    go to state 121
    number  go to state 122


State 85

   20 expression: NUMBER .

    $default  reduce using rule 20 (expression)


State 86

   15 expression: LEFT_ROUND_BRACKET expression . RIGHT_ROUND_BRACKET
   16           | expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression

    RIGHT_ROUND_BRACKET  shift, and go to state 123
    PLUS                 shift, and go to state 90
    MINUS                shift, and go to state 91
    MULTIPLY             shift, and go to state 92
    DIVIDE               shift, and go to state 93


State 87

   21 expression: name .

    $default  reduce using rule 21 (expression)


State 88

   51 return_statement: RETURN NUMBER SEMICOLON .

    $default  reduce using rule 51 (return_statement)


State 89

   52 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 52 (return_statement)


State 90

   16 expression: expression PLUS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 124
    name        go to state 87


State 91

   17 expression: expression MINUS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 125
    name        go to state 87


State 92

   18 expression: expression MULTIPLY . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 126
    name        go to state 87


State 93

   19 expression: expression DIVIDE . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 127
    name        go to state 87


State 94

   50 return_statement: RETURN name SEMICOLON .

    $default  reduce using rule 50 (return_statement)


State 95

   68 condition: QUOTE . name QUOTE

    NAME  shift, and go to state 10

    name  go to state 128


State 96

   15 expression: LEFT_ROUND_BRACKET . expression RIGHT_ROUND_BRACKET
   59 conditions: LEFT_ROUND_BRACKET . conditions RIGHT_ROUND_BRACKET
   65 condition: LEFT_ROUND_BRACKET . name RIGHT_ROUND_BRACKET condition_operand expression
   66          | LEFT_ROUND_BRACKET . name RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 129
    name        go to state 130
    conditions  go to state 131
    condition   go to state 100


State 97

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   63 condition: expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 63 (condition)


State 98

   21 expression: name .
   64 condition: name . condition_operand expression
   67          | name . condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 132
    LEFT_ANGLE_BRACKET   shift, and go to state 133
    GREATER_EQUAL        shift, and go to state 134
    LESS_EQUAL           shift, and go to state 135
    EQUAL_EQUAL          shift, and go to state 136
    NOT_EQUAL            shift, and go to state 137

    $default  reduce using rule 21 (expression)

    condition_operand  go to state 138


State 99

   58 while: WHILE LEFT_ROUND_BRACKET conditions . RIGHT_ROUND_BRACKET statement_with_or_without_brackets
   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions

    RIGHT_ROUND_BRACKET  shift, and go to state 139
    AND                  shift, and go to state 140
    OR                   shift, and go to state 141


State 100

   62 conditions: condition .

    $default  reduce using rule 62 (conditions)


State 101

   56 statement_with_or_without_brackets: LEFT_CURLY_BRACKET statements . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 142


State 102

   78 do_while: DO statement_with_or_without_brackets WHILE . LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 143


State 103

   80 for_expression: SEMICOLON . conditions SEMICOLON
   82               | SEMICOLON . conditions SEMICOLON for_step

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 144
    condition   go to state 100


State 104

   84 for_statement: NAME .
   87 for_step: NAME . PLUS PLUS
   88         | NAME . MINUS MINUS
   89         | NAME . EQUALS expression
   90         | NAME . PLUS EQUALS expression
   91         | NAME . MINUS EQUALS expression
   92         | NAME . MULTIPLY EQUALS expression
   93         | NAME . DIVIDE EQUALS expression

    EQUALS    shift, and go to state 145
    PLUS      shift, and go to state 146
    MINUS     shift, and go to state 147
    MULTIPLY  shift, and go to state 148
    DIVIDE    shift, and go to state 149

    $default  reduce using rule 84 (for_statement)


State 105

   85 for_statement: type . NAME EQUALS expression

    NAME  shift, and go to state 150


State 106

   79 for: FOR LEFT_ROUND_BRACKET for_expression . RIGHT_ROUND_BRACKET statement_with_or_without_brackets

    RIGHT_ROUND_BRACKET  shift, and go to state 151


State 107

   81 for_expression: for_statement . SEMICOLON conditions SEMICOLON
   83               | for_statement . SEMICOLON conditions SEMICOLON for_step

    SEMICOLON  shift, and go to state 152


State 108

   86 for_statement: for_step .

    $default  reduce using rule 86 (for_statement)


State 109

   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions
   75 if: IF LEFT_ROUND_BRACKET conditions . RIGHT_ROUND_BRACKET statement_with_or_without_brackets else

    RIGHT_ROUND_BRACKET  shift, and go to state 153
    AND                  shift, and go to state 140
    OR                   shift, and go to state 141


State 110

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME . RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET NAME . RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 154


State 111

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   37 statement: name EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 155
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 112

   38 statement: name PLUS EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 156
    name        go to state 87


State 113

   35 statement: name PLUS PLUS . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 114

   39 statement: name MINUS EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 158
    name        go to state 87


State 115

   36 statement: name MINUS MINUS . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 116

   40 statement: name MULTIPLY EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 160
    name        go to state 87


State 117

   41 statement: name DIVIDE EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 161
    name        go to state 87


State 118

   54 variable: type name SEMICOLON .

    $default  reduce using rule 54 (variable)


State 119

   55 variable: type name EQUALS . expression SEMICOLON

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 162
    name        go to state 87


State 120

   25 number: NUMBER .

    $default  reduce using rule 25 (number)


State 121

   42 statement: PRINTF LEFT_ROUND_BRACKET QUOTE name . QUOTE RIGHT_ROUND_BRACKET SEMICOLON

    QUOTE  shift, and go to state 163


State 122

   43 statement: PRINTF LEFT_ROUND_BRACKET QUOTE number . QUOTE RIGHT_ROUND_BRACKET SEMICOLON

    QUOTE  shift, and go to state 164


State 123

   15 expression: LEFT_ROUND_BRACKET expression RIGHT_ROUND_BRACKET .

    $default  reduce using rule 15 (expression)


State 124

   16 expression: expression . PLUS expression
   16           | expression PLUS expression .
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    PLUS      [reduce using rule 16 (expression)]
    MINUS     [reduce using rule 16 (expression)]
    MULTIPLY  [reduce using rule 16 (expression)]
    DIVIDE    [reduce using rule 16 (expression)]
    $default  reduce using rule 16 (expression)


State 125

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   17           | expression MINUS expression .
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    PLUS      [reduce using rule 17 (expression)]
    MINUS     [reduce using rule 17 (expression)]
    MULTIPLY  [reduce using rule 17 (expression)]
    DIVIDE    [reduce using rule 17 (expression)]
    $default  reduce using rule 17 (expression)


State 126

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   18           | expression MULTIPLY expression .
   19           | expression . DIVIDE expression

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    PLUS      [reduce using rule 18 (expression)]
    MINUS     [reduce using rule 18 (expression)]
    MULTIPLY  [reduce using rule 18 (expression)]
    DIVIDE    [reduce using rule 18 (expression)]
    $default  reduce using rule 18 (expression)


State 127

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   19           | expression DIVIDE expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    PLUS      [reduce using rule 19 (expression)]
    MINUS     [reduce using rule 19 (expression)]
    MULTIPLY  [reduce using rule 19 (expression)]
    DIVIDE    [reduce using rule 19 (expression)]
    $default  reduce using rule 19 (expression)


State 128

   68 condition: QUOTE name . QUOTE

    QUOTE  shift, and go to state 165


State 129

   15 expression: LEFT_ROUND_BRACKET expression . RIGHT_ROUND_BRACKET
   16           | expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   63 condition: expression .

    RIGHT_ROUND_BRACKET  shift, and go to state 123
    PLUS                 shift, and go to state 90
    MINUS                shift, and go to state 91
    MULTIPLY             shift, and go to state 92
    DIVIDE               shift, and go to state 93

    RIGHT_ROUND_BRACKET  [reduce using rule 63 (condition)]
    $default             reduce using rule 63 (condition)


State 130

   21 expression: name .
   64 condition: name . condition_operand expression
   65          | LEFT_ROUND_BRACKET name . RIGHT_ROUND_BRACKET condition_operand expression
   66          | LEFT_ROUND_BRACKET name . RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET
   67          | name . condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 166
    RIGHT_ANGLE_BRACKET  shift, and go to state 132
    LEFT_ANGLE_BRACKET   shift, and go to state 133
    GREATER_EQUAL        shift, and go to state 134
    LESS_EQUAL           shift, and go to state 135
    EQUAL_EQUAL          shift, and go to state 136
    NOT_EQUAL            shift, and go to state 137

    RIGHT_ROUND_BRACKET  [reduce using rule 21 (expression)]
    $default             reduce using rule 21 (expression)

    condition_operand  go to state 138


State 131

   59 conditions: LEFT_ROUND_BRACKET conditions . RIGHT_ROUND_BRACKET
   60           | conditions . AND conditions
   61           | conditions . OR conditions

    RIGHT_ROUND_BRACKET  shift, and go to state 167
    AND                  shift, and go to state 140
    OR                   shift, and go to state 141


State 132

   74 condition_operand: RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 74 (condition_operand)


State 133

   73 condition_operand: LEFT_ANGLE_BRACKET .

    $default  reduce using rule 73 (condition_operand)


State 134

   69 condition_operand: GREATER_EQUAL .

    $default  reduce using rule 69 (condition_operand)


State 135

   70 condition_operand: LESS_EQUAL .

    $default  reduce using rule 70 (condition_operand)


State 136

   71 condition_operand: EQUAL_EQUAL .

    $default  reduce using rule 71 (condition_operand)


State 137

   72 condition_operand: NOT_EQUAL .

    $default  reduce using rule 72 (condition_operand)


State 138

   64 condition: name condition_operand . expression
   67          | name condition_operand . LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 168
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 169
    name        go to state 87


State 139

   58 while: WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET . statement_with_or_without_brackets

    LEFT_CURLY_BRACKET  shift, and go to state 69
    NAME                shift, and go to state 10
    INT_TYPE            shift, and go to state 12
    DOUBLE_TYPE         shift, and go to state 13
    FLOAT_TYPE          shift, and go to state 14
    CHAR_TYPE           shift, and go to state 15
    STRING_TYPE         shift, and go to state 16
    BOOL_TYPE           shift, and go to state 17
    PRINTF              shift, and go to state 41
    RETURN              shift, and go to state 42
    WHILE               shift, and go to state 43
    DO                  shift, and go to state 44
    FOR                 shift, and go to state 45
    IF                  shift, and go to state 46
    SWITCH              shift, and go to state 47

    name                                go to state 48
    type                                go to state 49
    statement                           go to state 70
    return_statement                    go to state 52
    variable                            go to state 53
    statement_with_or_without_brackets  go to state 170
    while                               go to state 54
    if                                  go to state 55
    do_while                            go to state 56
    for                                 go to state 57
    switch                              go to state 58


State 140

   60 conditions: conditions AND . conditions

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 171
    condition   go to state 100


State 141

   61 conditions: conditions OR . conditions

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 172
    condition   go to state 100


State 142

   56 statement_with_or_without_brackets: LEFT_CURLY_BRACKET statements RIGHT_CURLY_BRACKET .

    $default  reduce using rule 56 (statement_with_or_without_brackets)


State 143

   78 do_while: DO statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET . conditions RIGHT_ROUND_BRACKET SEMICOLON

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 173
    condition   go to state 100


State 144

   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions
   80 for_expression: SEMICOLON conditions . SEMICOLON
   82               | SEMICOLON conditions . SEMICOLON for_step

    SEMICOLON  shift, and go to state 174
    AND        shift, and go to state 140
    OR         shift, and go to state 141


State 145

   89 for_step: NAME EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 175
    name        go to state 87


State 146

   87 for_step: NAME PLUS . PLUS
   90         | NAME PLUS . EQUALS expression

    EQUALS  shift, and go to state 176
    PLUS    shift, and go to state 177


State 147

   88 for_step: NAME MINUS . MINUS
   91         | NAME MINUS . EQUALS expression

    EQUALS  shift, and go to state 178
    MINUS   shift, and go to state 179


State 148

   92 for_step: NAME MULTIPLY . EQUALS expression

    EQUALS  shift, and go to state 180


State 149

   93 for_step: NAME DIVIDE . EQUALS expression

    EQUALS  shift, and go to state 181


State 150

   85 for_statement: type NAME . EQUALS expression

    EQUALS  shift, and go to state 182


State 151

   79 for: FOR LEFT_ROUND_BRACKET for_expression RIGHT_ROUND_BRACKET . statement_with_or_without_brackets

    LEFT_CURLY_BRACKET  shift, and go to state 69
    NAME                shift, and go to state 10
    INT_TYPE            shift, and go to state 12
    DOUBLE_TYPE         shift, and go to state 13
    FLOAT_TYPE          shift, and go to state 14
    CHAR_TYPE           shift, and go to state 15
    STRING_TYPE         shift, and go to state 16
    BOOL_TYPE           shift, and go to state 17
    PRINTF              shift, and go to state 41
    RETURN              shift, and go to state 42
    WHILE               shift, and go to state 43
    DO                  shift, and go to state 44
    FOR                 shift, and go to state 45
    IF                  shift, and go to state 46
    SWITCH              shift, and go to state 47

    name                                go to state 48
    type                                go to state 49
    statement                           go to state 70
    return_statement                    go to state 52
    variable                            go to state 53
    statement_with_or_without_brackets  go to state 183
    while                               go to state 54
    if                                  go to state 55
    do_while                            go to state 56
    for                                 go to state 57
    switch                              go to state 58


State 152

   81 for_expression: for_statement SEMICOLON . conditions SEMICOLON
   83               | for_statement SEMICOLON . conditions SEMICOLON for_step

    QUOTE               shift, and go to state 95
    LEFT_ROUND_BRACKET  shift, and go to state 96
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 97
    name        go to state 98
    conditions  go to state 184
    condition   go to state 100


State 153

   75 if: IF LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET . statement_with_or_without_brackets else

    LEFT_CURLY_BRACKET  shift, and go to state 69
    NAME                shift, and go to state 10
    INT_TYPE            shift, and go to state 12
    DOUBLE_TYPE         shift, and go to state 13
    FLOAT_TYPE          shift, and go to state 14
    CHAR_TYPE           shift, and go to state 15
    STRING_TYPE         shift, and go to state 16
    BOOL_TYPE           shift, and go to state 17
    PRINTF              shift, and go to state 41
    RETURN              shift, and go to state 42
    WHILE               shift, and go to state 43
    DO                  shift, and go to state 44
    FOR                 shift, and go to state 45
    IF                  shift, and go to state 46
    SWITCH              shift, and go to state 47

    name                                go to state 48
    type                                go to state 49
    statement                           go to state 70
    return_statement                    go to state 52
    variable                            go to state 53
    statement_with_or_without_brackets  go to state 185
    while                               go to state 54
    if                                  go to state 55
    do_while                            go to state 56
    for                                 go to state 57
    switch                              go to state 58


State 154

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET . LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET . LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 186


State 155

   37 statement: name EQUALS expression SEMICOLON .

    $default  reduce using rule 37 (statement)


State 156

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   38 statement: name PLUS EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 187
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 157

   35 statement: name PLUS PLUS SEMICOLON .

    $default  reduce using rule 35 (statement)


State 158

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   39 statement: name MINUS EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 188
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 159

   36 statement: name MINUS MINUS SEMICOLON .

    $default  reduce using rule 36 (statement)


State 160

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   40 statement: name MULTIPLY EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 189
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 161

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   41 statement: name DIVIDE EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 190
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 162

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   55 variable: type name EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 191
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    MULTIPLY   shift, and go to state 92
    DIVIDE     shift, and go to state 93


State 163

   42 statement: PRINTF LEFT_ROUND_BRACKET QUOTE name QUOTE . RIGHT_ROUND_BRACKET SEMICOLON

    RIGHT_ROUND_BRACKET  shift, and go to state 192


State 164

   43 statement: PRINTF LEFT_ROUND_BRACKET QUOTE number QUOTE . RIGHT_ROUND_BRACKET SEMICOLON

    RIGHT_ROUND_BRACKET  shift, and go to state 193


State 165

   68 condition: QUOTE name QUOTE .

    $default  reduce using rule 68 (condition)


State 166

   65 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET . condition_operand expression
   66          | LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET . condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 132
    LEFT_ANGLE_BRACKET   shift, and go to state 133
    GREATER_EQUAL        shift, and go to state 134
    LESS_EQUAL           shift, and go to state 135
    EQUAL_EQUAL          shift, and go to state 136
    NOT_EQUAL            shift, and go to state 137

    condition_operand  go to state 194


State 167

   59 conditions: LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET .

    $default  reduce using rule 59 (conditions)


State 168

   15 expression: LEFT_ROUND_BRACKET . expression RIGHT_ROUND_BRACKET
   67 condition: name condition_operand LEFT_ROUND_BRACKET . name RIGHT_ROUND_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 86
    name        go to state 195


State 169

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   64 condition: name condition_operand expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 64 (condition)


State 170

   58 while: WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets .

    $default  reduce using rule 58 (while)


State 171

   60 conditions: conditions . AND conditions
   60           | conditions AND conditions .
   61           | conditions . OR conditions

    AND  shift, and go to state 140
    OR   shift, and go to state 141

    AND       [reduce using rule 60 (conditions)]
    OR        [reduce using rule 60 (conditions)]
    $default  reduce using rule 60 (conditions)


State 172

   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions
   61           | conditions OR conditions .

    AND  shift, and go to state 140
    OR   shift, and go to state 141

    AND       [reduce using rule 61 (conditions)]
    OR        [reduce using rule 61 (conditions)]
    $default  reduce using rule 61 (conditions)


State 173

   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions
   78 do_while: DO statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET conditions . RIGHT_ROUND_BRACKET SEMICOLON

    RIGHT_ROUND_BRACKET  shift, and go to state 196
    AND                  shift, and go to state 140
    OR                   shift, and go to state 141


State 174

   80 for_expression: SEMICOLON conditions SEMICOLON .
   82               | SEMICOLON conditions SEMICOLON . for_step

    NAME  shift, and go to state 197

    $default  reduce using rule 80 (for_expression)

    for_step  go to state 198


State 175

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   89 for_step: NAME EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 89 (for_step)


State 176

   90 for_step: NAME PLUS EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 199
    name        go to state 87


State 177

   87 for_step: NAME PLUS PLUS .

    $default  reduce using rule 87 (for_step)


State 178

   91 for_step: NAME MINUS EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 200
    name        go to state 87


State 179

   88 for_step: NAME MINUS MINUS .

    $default  reduce using rule 88 (for_step)


State 180

   92 for_step: NAME MULTIPLY EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 201
    name        go to state 87


State 181

   93 for_step: NAME DIVIDE EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 202
    name        go to state 87


State 182

   85 for_statement: type NAME EQUALS . expression

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 203
    name        go to state 87


State 183

   79 for: FOR LEFT_ROUND_BRACKET for_expression RIGHT_ROUND_BRACKET statement_with_or_without_brackets .

    $default  reduce using rule 79 (for)


State 184

   60 conditions: conditions . AND conditions
   61           | conditions . OR conditions
   81 for_expression: for_statement SEMICOLON conditions . SEMICOLON
   83               | for_statement SEMICOLON conditions . SEMICOLON for_step

    SEMICOLON  shift, and go to state 204
    AND        shift, and go to state 140
    OR         shift, and go to state 141


State 185

   75 if: IF LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets . else

    ELSE  shift, and go to state 205

    ELSE      [reduce using rule 77 (else)]
    $default  reduce using rule 77 (else)

    else  go to state 206


State 186

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET . cases RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET . cases default RIGHT_CURLY_BRACKET

    CASE  shift, and go to state 207

    cases  go to state 208
    case   go to state 209


State 187

   38 statement: name PLUS EQUALS expression SEMICOLON .

    $default  reduce using rule 38 (statement)


State 188

   39 statement: name MINUS EQUALS expression SEMICOLON .

    $default  reduce using rule 39 (statement)


State 189

   40 statement: name MULTIPLY EQUALS expression SEMICOLON .

    $default  reduce using rule 40 (statement)


State 190

   41 statement: name DIVIDE EQUALS expression SEMICOLON .

    $default  reduce using rule 41 (statement)


State 191

   55 variable: type name EQUALS expression SEMICOLON .

    $default  reduce using rule 55 (variable)


State 192

   42 statement: PRINTF LEFT_ROUND_BRACKET QUOTE name QUOTE RIGHT_ROUND_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 210


State 193

   43 statement: PRINTF LEFT_ROUND_BRACKET QUOTE number QUOTE RIGHT_ROUND_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 211


State 194

   65 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand . expression
   66          | LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand . LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 212
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 213
    name        go to state 87


State 195

   21 expression: name .
   67 condition: name condition_operand LEFT_ROUND_BRACKET name . RIGHT_ROUND_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 214

    RIGHT_ROUND_BRACKET  [reduce using rule 21 (expression)]
    $default             reduce using rule 21 (expression)


State 196

   78 do_while: DO statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 215


State 197

   87 for_step: NAME . PLUS PLUS
   88         | NAME . MINUS MINUS
   89         | NAME . EQUALS expression
   90         | NAME . PLUS EQUALS expression
   91         | NAME . MINUS EQUALS expression
   92         | NAME . MULTIPLY EQUALS expression
   93         | NAME . DIVIDE EQUALS expression

    EQUALS    shift, and go to state 145
    PLUS      shift, and go to state 146
    MINUS     shift, and go to state 147
    MULTIPLY  shift, and go to state 148
    DIVIDE    shift, and go to state 149


State 198

   82 for_expression: SEMICOLON conditions SEMICOLON for_step .

    $default  reduce using rule 82 (for_expression)


State 199

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   90 for_step: NAME PLUS EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 90 (for_step)


State 200

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   91 for_step: NAME MINUS EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 91 (for_step)


State 201

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   92 for_step: NAME MULTIPLY EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 92 (for_step)


State 202

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   93 for_step: NAME DIVIDE EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 93 (for_step)


State 203

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   85 for_statement: type NAME EQUALS expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 85 (for_statement)


State 204

   81 for_expression: for_statement SEMICOLON conditions SEMICOLON .
   83               | for_statement SEMICOLON conditions SEMICOLON . for_step

    NAME  shift, and go to state 197

    $default  reduce using rule 81 (for_expression)

    for_step  go to state 216


State 205

   76 else: ELSE . statement_with_or_without_brackets

    LEFT_CURLY_BRACKET  shift, and go to state 69
    NAME                shift, and go to state 10
    INT_TYPE            shift, and go to state 12
    DOUBLE_TYPE         shift, and go to state 13
    FLOAT_TYPE          shift, and go to state 14
    CHAR_TYPE           shift, and go to state 15
    STRING_TYPE         shift, and go to state 16
    BOOL_TYPE           shift, and go to state 17
    PRINTF              shift, and go to state 41
    RETURN              shift, and go to state 42
    WHILE               shift, and go to state 43
    DO                  shift, and go to state 44
    FOR                 shift, and go to state 45
    IF                  shift, and go to state 46
    SWITCH              shift, and go to state 47

    name                                go to state 48
    type                                go to state 49
    statement                           go to state 70
    return_statement                    go to state 52
    variable                            go to state 53
    statement_with_or_without_brackets  go to state 217
    while                               go to state 54
    if                                  go to state 55
    do_while                            go to state 56
    for                                 go to state 57
    switch                              go to state 58


State 206

   75 if: IF LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET statement_with_or_without_brackets else .

    $default  reduce using rule 75 (if)


State 207

   98 case: CASE . value COLON statements break

    QUOTE   shift, and go to state 218
    NUMBER  shift, and go to state 219

    value  go to state 220


State 208

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases . RIGHT_CURLY_BRACKET
   95       | SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases . default RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 221
    DEFAULT              shift, and go to state 222

    default  go to state 223


State 209

   96 cases: case . cases
   97      | case .

    CASE  shift, and go to state 207

    $default  reduce using rule 97 (cases)

    cases  go to state 224
    case   go to state 209


State 210

   42 statement: PRINTF LEFT_ROUND_BRACKET QUOTE name QUOTE RIGHT_ROUND_BRACKET SEMICOLON .

    $default  reduce using rule 42 (statement)


State 211

   43 statement: PRINTF LEFT_ROUND_BRACKET QUOTE number QUOTE RIGHT_ROUND_BRACKET SEMICOLON .

    $default  reduce using rule 43 (statement)


State 212

   15 expression: LEFT_ROUND_BRACKET . expression RIGHT_ROUND_BRACKET
   66 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET . name RIGHT_ROUND_BRACKET

    LEFT_ROUND_BRACKET  shift, and go to state 62
    NAME                shift, and go to state 10
    NUMBER              shift, and go to state 85
    TRUE_STR            shift, and go to state 64
    FALSE_STR           shift, and go to state 65

    expression  go to state 86
    name        go to state 225


State 213

   16 expression: expression . PLUS expression
   17           | expression . MINUS expression
   18           | expression . MULTIPLY expression
   19           | expression . DIVIDE expression
   65 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand expression .

    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    MULTIPLY  shift, and go to state 92
    DIVIDE    shift, and go to state 93

    $default  reduce using rule 65 (condition)


State 214

   67 condition: name condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET .

    $default  reduce using rule 67 (condition)


State 215

   78 do_while: DO statement_with_or_without_brackets WHILE LEFT_ROUND_BRACKET conditions RIGHT_ROUND_BRACKET SEMICOLON .

    $default  reduce using rule 78 (do_while)


State 216

   83 for_expression: for_statement SEMICOLON conditions SEMICOLON for_step .

    $default  reduce using rule 83 (for_expression)


State 217

   76 else: ELSE statement_with_or_without_brackets .

    $default  reduce using rule 76 (else)


State 218

   99 value: QUOTE . NAME QUOTE

    NAME  shift, and go to state 226


State 219

  100 value: NUMBER .

    $default  reduce using rule 100 (value)


State 220

   98 case: CASE value . COLON statements break

    COLON  shift, and go to state 227


State 221

   94 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases RIGHT_CURLY_BRACKET .

    $default  reduce using rule 94 (switch)


State 222

  103 default: DEFAULT . COLON statements break

    COLON  shift, and go to state 228


State 223

   95 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 229


State 224

   96 cases: case cases .

    $default  reduce using rule 96 (cases)


State 225

   21 expression: name .
   66 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET name . RIGHT_ROUND_BRACKET

    RIGHT_ROUND_BRACKET  shift, and go to state 230

    RIGHT_ROUND_BRACKET  [reduce using rule 21 (expression)]
    $default             reduce using rule 21 (expression)


State 226

   99 value: QUOTE NAME . QUOTE

    QUOTE  shift, and go to state 231


State 227

   98 case: CASE value COLON . statements break

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 232
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 228

  103 default: DEFAULT COLON . statements break

    NAME         shift, and go to state 10
    INT_TYPE     shift, and go to state 12
    DOUBLE_TYPE  shift, and go to state 13
    FLOAT_TYPE   shift, and go to state 14
    CHAR_TYPE    shift, and go to state 15
    STRING_TYPE  shift, and go to state 16
    BOOL_TYPE    shift, and go to state 17
    PRINTF       shift, and go to state 41
    RETURN       shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    IF           shift, and go to state 46
    SWITCH       shift, and go to state 47

    $default  reduce using rule 33 (statements)

    name              go to state 48
    type              go to state 49
    statements        go to state 233
    statement         go to state 51
    return_statement  go to state 52
    variable          go to state 53
    while             go to state 54
    if                go to state 55
    do_while          go to state 56
    for               go to state 57
    switch            go to state 58


State 229

   95 switch: SWITCH LEFT_ROUND_BRACKET NAME RIGHT_ROUND_BRACKET LEFT_CURLY_BRACKET cases default RIGHT_CURLY_BRACKET .

    $default  reduce using rule 95 (switch)


State 230

   66 condition: LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET condition_operand LEFT_ROUND_BRACKET name RIGHT_ROUND_BRACKET .

    $default  reduce using rule 66 (condition)


State 231

   99 value: QUOTE NAME QUOTE .

    $default  reduce using rule 99 (value)


State 232

   98 case: CASE value COLON statements . break

    BREAK  shift, and go to state 234

    $default  reduce using rule 102 (break)

    break  go to state 235


State 233

  103 default: DEFAULT COLON statements . break

    BREAK  shift, and go to state 234

    $default  reduce using rule 102 (break)

    break  go to state 236


State 234

  101 break: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 237


State 235

   98 case: CASE value COLON statements break .

    $default  reduce using rule 98 (case)


State 236

  103 default: DEFAULT COLON statements break .

    $default  reduce using rule 103 (default)


State 237

  101 break: BREAK SEMICOLON .

    $default  reduce using rule 101 (break)
